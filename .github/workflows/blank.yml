name: 'CD - Deploy Dev Infra'

# on:
#   workflow_run:
#     workflows: ["CI - Branch-Specific Validation"]
#     types: [completed]
#   workflow_dispatch:
#     inputs:
#       action:
#         description: 'Deployment Action'
#         required: true
#         default: 'apply'
#         type: choice
#         options:
#         - plan
#         - apply
#         - destroy

env:
  ENVIRONMENT: dev

jobs:
  check-trigger:
    name: 'Check Trigger Conditions'
    runs-on: self-hosted
    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
    steps:
      - name: Debug Workflow Run Context
        if: github.event.workflow_run.conclusion == 'success'
        run: |
          echo "=== Workflow Run Debug Info ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Head branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Head SHA: ${{ github.event.workflow_run.head_sha }}"
          echo "Workflow name: ${{ github.event.workflow_run.name }}"
          echo "Workflow ID: ${{ github.event.workflow_run.id }}"

      - name: Check Deployment Conditions
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "Manual trigger - will deploy"
          elif [ "${{ github.event_name }}" = "workflow_run" ]; then
            BRANCH="${{ github.event.workflow_run.head_branch }}"
            CONCLUSION="${{ github.event.workflow_run.conclusion }}"
            
            echo "Branch: $BRANCH"
            echo "Conclusion: $CONCLUSION"
            
            if [ "$BRANCH" = "develop" ] && [ "$CONCLUSION" = "success" ]; then
              echo "should_deploy=true" >> $GITHUB_OUTPUT
              echo "CI passed on develop - will deploy"
            else
              echo "should_deploy=false" >> $GITHUB_OUTPUT
              echo "Not deploying:"
              echo "   - Branch is '$BRANCH' (expected 'develop')"
              echo "   - CI status is '$CONCLUSION' (expected 'success')"
            fi
          else
            echo "should_deploy=false" >> $GITHUB_OUTPUT
            echo "Unknown trigger type"
          fi

  deploy-dev:
    name: 'Deploy to Development'
    runs-on: self-hosted
    needs: check-trigger
    if: needs.check-trigger.outputs.should_deploy == 'true'
    
    environment: development
    
    defaults:
      run:
        working-directory: azure/code/dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.ref }}

      - name: Environment Context
        run: |
          echo "=== Development Environment Deployment ==="
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch || github.ref_name }}"
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "Action: apply (auto)"
            echo "Trigger: CI Success"
            echo "CI Workflow: ${{ github.event.workflow_run.name }}"
          else
            echo "Action: ${{ github.event.inputs.action }}"
            echo "Trigger: Manual"
          fi

      - name: Terraform Init
        run: |
          echo "=== Terraform Init ==="
          terraform init

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan' || github.event_name == 'workflow_run'
        run: |
          echo "=== Terraform Plan ==="
          terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply' || github.event_name == 'workflow_run'
        run: |
          echo "=== Applying to Development Environment ==="
          terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          echo "=== Destroying Development Environment ==="
          terraform destroy -auto-approve

      - name: Post-Deployment AKS Check
        if: (github.event.inputs.action == 'apply' || github.event_name == 'workflow_run') && success()
        run: |
          echo "=== Post-Deployment Tasks ==="
          
          # Get cluster info from Terraform outputs
          CLUSTER_NAME=$(terraform output -raw cluster_name)
          RG_NAME=$(terraform output -raw resource_group_name)
          
          echo "Cluster: $CLUSTER_NAME"
          echo "Resource Group: $RG_NAME"
          
          # Get kubectl config using outputs
          az aks get-credentials --resource-group "$RG_NAME" --name "$CLUSTER_NAME" --overwrite-existing
          
          # Wait for cluster readiness
          kubectl wait --for=condition=Ready nodes --all --timeout=300s

      - name: Deployment Summary
        if: always()
        run: |
          echo "=== Development Deployment Summary ==="
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Trigger: ${{ github.event_name }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch || github.ref_name }}"
          
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "Action: apply (auto)"
            echo "Status: AUTO-DEPLOYED via CI"
          else
            echo "Action: ${{ github.event.inputs.action }}"
            if [ "${{ github.event.inputs.action }}" = "apply" ]; then
              echo "Status: DEPLOYED"
            elif [ "${{ github.event.inputs.action }}" = "destroy" ]; then
              echo "Status: DESTROYED"
            else
              echo "Status: PLANNED"
            fi
          fi
          
          echo "Timestamp: $(date)"
