name: 'CD - Deploy Dev Infra'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Deployment Action'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - destroy

env:
  ENVIRONMENT: dev

jobs:
  deploy-dev:
    name: 'Deploy to Development'
    runs-on: self-hosted
    environment: development
    defaults:
      run:
        working-directory: azure/code/dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Terraform Init
        run: |
          echo "=== Terraform Init ==="
          terraform init

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        run: |
          echo "=== Terraform Plan ==="
          terraform plan

      # - name: Manual Approval
      #   if: github.event.inputs.action == 'plan'
      #   run: |
      #     echo "Waiting for manual approval before applying to development."
      #     echo "Approve this job in the GitHub Actions UI to continue."

      - name: Terraform Apply
        if: github.event.inputs.action == 'plan'
        run: |
          echo "=== Applying to Development Environment ==="
          terraform apply

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          echo "=== Destroying Development Environment ==="
          echo "This action cannot be undone!"
          terraform destroy -auto-approve

      - name: Post-Deployment AKS Check
        if: (github.event.inputs.action == 'plan')
        run: |
          echo "=== Post-Deployment Tasks ==="
          CLUSTER_NAME=$(terraform output -raw cluster_name)
          RG_NAME=$(terraform output -raw resource_group_name)
          echo "Cluster: $CLUSTER_NAME"
          echo "Resource Group: $RG_NAME"
          az aks get-credentials --resource-group "$RG_NAME" --name "$CLUSTER_NAME" --overwrite-existing
          kubectl wait --for=condition=Ready nodes --all --timeout=300s

      - name: Deployment Summary
        if: always()
        run: |
          echo "=== Development Deployment Summary ==="
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Trigger: ${{ github.event_name }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch || github.ref_name }}"
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "Action: apply (auto)"
            echo "Status: AUTO-DEPLOYED via CI"
          else
            echo "Action: ${{ github.event.inputs.action }}"
            if [ "${{ github.event.inputs.action }}" = "apply" ]; then
              echo "Status: DEPLOYED"
            elif [ "${{ github.event.inputs.action }}" = "destroy" ]; then
              echo "Status: DESTROYED"
            else
              echo "Status: PLANNED"
            fi
          fi
          echo "Timestamp: $(date)"
